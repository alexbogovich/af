buildscript {
    ext.kotlin_version = '1.2.30'
    ext.junit_jupiter_version = '5.1.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.github.alexbogovich'
version '1.0'

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.apache.poi:poi:3.17"
    compile "org.apache.poi:poi-ooxml:3.17"
    compile "xerces:xercesImpl:2.11.0"
    compile "org.codehaus.woodstox:stax2-api:4.0.0"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testCompile "org.assertj:assertj-core:3.9.0"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

test {
    useJUnitPlatform {
        // includeEngines 'junit-jupiter', 'junit-vintage'
        // excludeEngines 'custom-engine'

        // includeTags 'fast'
        excludeTags 'slow'
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
    }

    reports {
        html.enabled = true
    }

    finalizedBy jacocoTestReport
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.6'
    distributionType = Wrapper.DistributionType.ALL
}